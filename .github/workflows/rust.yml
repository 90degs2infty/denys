# SPDX-FileCopyrightText: (C) 2024 90degs2infty
# SPDX-FileContributor: 90degs2infty <90degs2infty@posteo.org>
#
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: Rust

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      channel:
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.channel }}
          target: ${{ inputs.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Check compilation
        run: cargo check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.channel }}
          target: ${{ inputs.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.channel }}
          target: ${{ inputs.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Linting
        run: cargo clippy -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.channel }}
          target: ${{ inputs.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Build library
        run: cargo build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.channel }}
          target: ${{ inputs.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test
